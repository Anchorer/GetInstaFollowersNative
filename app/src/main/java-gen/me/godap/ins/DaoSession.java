package me.godap.ins;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import me.godap.ins.LoggedUser;
import me.godap.ins.UserDetail;
import me.godap.ins.Follower;
import me.godap.ins.Following;

import me.godap.ins.LoggedUserDao;
import me.godap.ins.UserDetailDao;
import me.godap.ins.FollowerDao;
import me.godap.ins.FollowingDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig loggedUserDaoConfig;
    private final DaoConfig userDetailDaoConfig;
    private final DaoConfig followerDaoConfig;
    private final DaoConfig followingDaoConfig;

    private final LoggedUserDao loggedUserDao;
    private final UserDetailDao userDetailDao;
    private final FollowerDao followerDao;
    private final FollowingDao followingDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        loggedUserDaoConfig = daoConfigMap.get(LoggedUserDao.class).clone();
        loggedUserDaoConfig.initIdentityScope(type);

        userDetailDaoConfig = daoConfigMap.get(UserDetailDao.class).clone();
        userDetailDaoConfig.initIdentityScope(type);

        followerDaoConfig = daoConfigMap.get(FollowerDao.class).clone();
        followerDaoConfig.initIdentityScope(type);

        followingDaoConfig = daoConfigMap.get(FollowingDao.class).clone();
        followingDaoConfig.initIdentityScope(type);

        loggedUserDao = new LoggedUserDao(loggedUserDaoConfig, this);
        userDetailDao = new UserDetailDao(userDetailDaoConfig, this);
        followerDao = new FollowerDao(followerDaoConfig, this);
        followingDao = new FollowingDao(followingDaoConfig, this);

        registerDao(LoggedUser.class, loggedUserDao);
        registerDao(UserDetail.class, userDetailDao);
        registerDao(Follower.class, followerDao);
        registerDao(Following.class, followingDao);
    }
    
    public void clear() {
        loggedUserDaoConfig.clearIdentityScope();
        userDetailDaoConfig.clearIdentityScope();
        followerDaoConfig.clearIdentityScope();
        followingDaoConfig.clearIdentityScope();
    }

    public LoggedUserDao getLoggedUserDao() {
        return loggedUserDao;
    }

    public UserDetailDao getUserDetailDao() {
        return userDetailDao;
    }

    public FollowerDao getFollowerDao() {
        return followerDao;
    }

    public FollowingDao getFollowingDao() {
        return followingDao;
    }

}
